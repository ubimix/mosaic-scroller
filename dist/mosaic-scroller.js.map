{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cda2ad853662afd3262d","webpack:///./index.js","webpack:///./src/Scroller.js","webpack:///./src/ScrollerBlock.js","webpack:///./src/ScrollerView.js","webpack:///external \"underscore\"","webpack:///external \"mosaic-commons\"","webpack:///external \"react\"","webpack:///./src/ScrollBarTracker.js"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wC;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA,gCAA+B,0BAA0B;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAkD,iBAAiB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;AC9ND;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACrCD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA,yBAAwB;AACxB,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,gCAA+B;AAC/B;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL,EAAC;;;;;;;ACpRD,gD;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;ACAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA,EAAC","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"underscore\"), require(\"mosaic-commons\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"underscore\", \"mosaic-commons\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mosaic-scroller\"] = factory(require(\"underscore\"), require(\"mosaic-commons\"), require(\"react\"));\n\telse\n\t\troot[\"mosaic-scroller\"] = factory(root[\"underscore\"], root[\"mosaic-commons\"], root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cda2ad853662afd3262d\n **/","module.exports = {\n    Scroller : require('./src/Scroller'),\n    ScrollerBlock : require('./src/ScrollerBlock'),\n    ScrollerView : require('./src/ScrollerView')\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","var _ = require('underscore');\nvar Mosaic = require('mosaic-commons');\n\n/**\n * This class is used to load and manage positions of items in an infinite\n * scroll list.\n */\nmodule.exports = Mosaic.Class.extend(Mosaic.Events.prototype, {\n\n    /**\n     * Initializes internal fields of this object.\n     */\n    initialize : function(options) {\n        this.setOptions(options);\n        this._firstItemIndex = 0;\n        this._firstItemShift = 0;\n        this._block = null;\n        this._blockShift = 0; // Read-only value updated by this class\n    },\n\n    // -------------------------------------------------------------------------\n    // Main methods of this class\n\n    /**\n     * Focus the item at the specified absolute position.\n     */\n    focusItem : function(index, shift) {\n        var that = this;\n        return Mosaic.P.then(function() {\n            var size = that.getItemsNumber();\n            that._firstItemIndex = Math.max(0, Math.min(index, size - 1));\n            that._firstItemShift = shift || 0;\n            if (that._firstItemIndex === 0) {\n                that._firstItemShift = Math.min(0, that._firstItemShift);\n            }\n            return that._loadItems();\n        });\n    },\n\n    /**\n     * Shifts the scroll to the specified delta. This method reloads data if\n     * neccessery and updates the block position.\n     */\n    setDelta : function(delta) {\n        var that = this;\n        return Mosaic.P.then(function() {\n            var itemLen = that.getAverageItemLength();\n            if (!that._block) {\n                var index = Math.floor(Math.max(0, delta) / itemLen);\n                var shift = -Math.abs(delta) % itemLen;\n                return that.focusItem(index, shift);\n            }\n            var index = that._block.getIndex();\n            var blockSize = that._block.getSize();\n\n            var shift = that._blockShift + delta;\n            var firstIndex = index;\n            for (var i = 0; shift < 0 && i < blockSize; i++) {\n                var len = that._block.getItemLength(i);\n                shift += len;\n                firstIndex++;\n            }\n            // TODO: go directly to the required item if the delta is too big\n            return that.focusItem(firstIndex, shift);\n        });\n    },\n\n    // -------------------------------------------------------------------------\n    // Public class methods\n\n    /**\n     * Returns already loaded block of items.\n     */\n    getBlock : function() {\n        return this._block;\n    },\n\n    /**\n     * Returns the shift (in pixels) of the block.\n     */\n    getBlockShift : function() {\n        return this._blockShift;\n    },\n\n    /**\n     * Returns the size of blocks - the minimal number of items to load at once.\n     */\n    getBlockSize : function() {\n        return this._getOptionValue('blockSize') || 5;\n    },\n\n    /**\n     * Returns the total number of items in the list.\n     */\n    getItemsNumber : function() {\n        return this._getOptionValue('itemsNumber') || 0;\n    },\n\n    /**\n     * Returns an average length of individual item.\n     */\n    getAverageItemLength : function() {\n        return this._getOptionValue('itemLen') || 10;\n    },\n\n    /**\n     * Returns the length of the scroller.\n     */\n    getScrollerLength : function() {\n        return this._getOptionValue('scrollerLen') || 0;\n    },\n\n    /**\n     * Returns the shift of the first loaded item.\n     */\n    getFirstItemShift : function() {\n        return this._firstItemShift;\n    },\n\n    /**\n     * Returns the index of the first loaded item.\n     */\n    getFirstItemIndex : function() {\n        return this._firstItemIndex;\n    },\n\n    // -------------------------------------------------------------------------\n    // Listeners\n\n    /** Adds a change listener */\n    addChangeListener : function(listener, context) {\n        this.on('update', listener, context);\n    },\n\n    /** Removes a change listener */\n    removeChangeListener : function(listener, context) {\n        this.off('update', listener, context);\n    },\n\n    // -------------------------------------------------------------------------\n    // Private methods\n\n    /**\n     * Load block of items starting from the _firstItemIndex and covering this\n     * scroller.\n     */\n    _loadItems : function() {\n        var that = this;\n        return Mosaic.P.then(function() {\n            var blockSize = that.getBlockSize();\n            var itemLen = that.getAverageItemLength();\n            var scrollerLen = that.getScrollerLength();\n            var itemsNumber = that.getItemsNumber();\n\n            var index = that._firstItemIndex;\n            index = Math.max(0, Math.min(index, itemsNumber - 1));\n\n            var count = Math.ceil(scrollerLen * 2 / itemLen);\n            var delta = Math.ceil(Math.abs(that._firstItemShift) / itemLen);\n            if (that._firstItemShift >= 0) {\n                index -= delta;\n            } else {\n                count += delta;\n            }\n            index = Math.floor(Math.max(0, index) / blockSize) * blockSize;\n            count = Math.ceil(count / blockSize) * blockSize;\n            count = Math.max(0, Math.min(count, itemsNumber - index));\n\n            return that.options.loadItems({\n                index : index,\n                length : count\n            });\n        }).then(function(block) {\n            that._block = block;\n            var index = that._block.getIndex();\n            var beforeLen = 0;\n            for (var i = index; i < that._firstItemIndex; i++) {\n                var len = that._block.getItemLength(i - index);\n                beforeLen += len;\n            }\n\n            //\n            var size = that._block.getSize();\n            var itemsNumber = that.getItemsNumber();\n            if (index + size === itemsNumber) {\n                var tailLen = 0;\n                for (var i = that._firstItemIndex; i < itemsNumber; i++) {\n                    var len = that._block.getItemLength(i - index);\n                    tailLen += len;\n                }\n                var scrollerLength = that.getScrollerLength();\n                that._firstItemShift = //\n                Math.max(that._firstItemShift, scrollerLength - tailLen);\n            }\n\n            // \n            if (that._firstItemIndex === 0) {\n                that._firstItemShift = Math.min(0, that._firstItemShift);\n            }\n\n            that._blockShift = that._firstItemShift - beforeLen;\n            if (index === 0) {\n                that._blockShift = Math.min(0, that._blockShift);\n                that._firstItemShift = //\n                Math.min(that._blockShift + beforeLen, that._firstItemShift);\n            }\n            that.emit('update', that);\n        });\n    },\n\n    /**\n     * Returns an option value corresponding to the specified key. If there is a\n     * function with the specified key then the execution result of this\n     * function is returned instead.\n     */\n    _getOptionValue : function(key) {\n        var value = this.options[key];\n        if (_.isFunction(value)) {\n            value = value();\n        }\n        return value;\n    }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Scroller.js\n ** module id = 1\n ** module chunks = 0\n **/","var _ = require('underscore');\nvar Mosaic = require('mosaic-commons');\n\nmodule.exports = Mosaic.Class.extend({\n\n    /**\n     * This constructor overloads fields of this object with specified in the\n     * parameter.\n     */\n    initialize : function(options) {\n        _.extend(this, options);\n    },\n\n    /**\n     * Returns the absolute index of the first item.\n     */\n    getIndex : function() {\n        return this.index;\n    },\n\n    /**\n     * Returns the real number of items contained in this block.\n     */\n    getSize : function() {\n        return this.items.length;\n    },\n\n    /**\n     * Returns the length of the item from the specified position.\n     */\n    getItemLength : function(index) {\n        var len = this.items.length;\n        if (index < 0 || index >= len)\n            return 0;\n        var item = this.items[index];\n        return item.offsetHeight;\n    }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ScrollerBlock.js\n ** module id = 2\n ** module chunks = 0\n **/","var _ = require('underscore');\nvar React = require('react');\nvar Mosaic = require('mosaic-commons');\nvar ScrollBarTracker = require('./ScrollBarTracker');\nvar ScrollerBlock = require('./ScrollerBlock');\nvar Scroller = require('./Scroller');\n\nvar ResizeMixin = {\n    addResizeListener : function(listener) {\n        if (window.attachEvent) {\n            window.attachEvent('onresize', listener);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', listener, true);\n        }\n    },\n    removeResizeListener : function(listener) {\n        if (window.detachEvent) {\n            window.detachEvent('onresize', listener);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', listener, true);\n        }\n    }\n\n};\n\nmodule.exports = React.createClass({\n    mixins : [ ResizeMixin ],\n\n    componentWillMount : function() {\n        var that = this;\n        that._renderParams = {\n            index : 0,\n            length : 0,\n            items : []\n        };\n        this._updatePosition = true;\n        that.addResizeListener(that._onResize);\n        that._tracker = new ScrollBarTracker();\n        that._scroller = new Scroller(_.extend({\n            itemLen : 10,\n            blockSize : 10,\n            scrollerLen : function() {\n                if (!that.isMounted())\n                    return 10;\n                var container = that.getDOMNode();\n                var scrollerLen = container.offsetHeight;\n                return scrollerLen;\n            },\n        }, that.props, {\n            itemsNumber : function() {\n                return that.props.getItemsNumber();\n            },\n            loadItems : function(params) {\n                return that._startItemsRendering(params);\n            }\n        }));\n        that._scroller.addChangeListener(function() {\n            if (!that.isMounted())\n                return;\n            var itemsElm = that.refs.items.getDOMNode();\n            var blockShift = that._scroller.getBlockShift();\n            itemsElm.style.marginTop = blockShift + 'px';\n        });\n        that._tracker.addChangeListener(function(ev) {\n            if (!that.isMounted())\n                return;\n            var scrollerElm = that.refs.scroller.getDOMNode();\n            if (ev.position != scrollerElm.scrollTop) {\n                scrollerElm.scrollTop = ev.position;\n            }\n            var itemsElm = that.refs.items.getDOMNode();\n            itemsElm.style.top = ev.position + 'px';\n            that._scroller.setDelta(-ev.delta);\n        }, that);\n    },\n    componentWillUnmount : function() {\n        this.removeResizeListener(this._onResize);\n    },\n    componentDidMount : function() {\n        var that = this;\n        that._scroller.setDelta(0);\n        setTimeout(function() {\n            that._updateScroller();\n        }, 1);\n    },\n    componentWillReceiveProps : function(props) {\n        this._updatePosition = true;\n    },\n    componentDidUpdate : function() {\n        if (this._updatePosition) {\n            this._updatePosition = false;\n            this._scroller.focusItem(this.props.index || 0);\n        }\n        this._finishItemsRendering();\n    },\n    _onResize : function() {\n        this._updateScroller();\n        this._scroller.setDelta(0);\n    },\n    _onScroll : function() {\n        this._updateScroller();\n    },\n    getInitialState : function() {\n        return {};\n    },\n    _updateScroller : function() {\n        var container = this.getDOMNode();\n        var scroller = this.refs.scroller.getDOMNode();\n        this._tracker.setPosition(scroller.scrollTop);\n        scroller.style.height = container.offsetHeight + 'px';\n        var placeholderLen = this._tracker.getLength();\n        var placeholder = this.refs.placeholder.getDOMNode();\n        placeholder.style.height = placeholderLen + 'px';\n    },\n    _startItemsRendering : function(params) {\n        var that = this;\n        that._renderParams = _.extend(that._renderParams, params);\n        return Mosaic.P.then(function() {\n            return that.props.renderItems(that._renderParams);\n        }).then(function(items) {\n            that._renderParams.items = items;\n            if (!that._deferredRendering) {\n                that._deferredRendering = Mosaic.P.defer();\n                that._deferredRendering.promise.then(function() {\n                    delete that._deferredRendering;\n                })\n                that._updateState();\n            }\n            return that._deferredRendering.promise;\n        });\n    },\n    _updateState : function() {\n        this.setState({});\n    },\n    _getScrollerWidth : function() {\n        if (this._scrollerWidth === undefined) {\n            var scroller = this.refs.scroller.getDOMNode();\n            var placeholder = this.refs.placeholder.getDOMNode();\n            scroller.style.overflowY = 'scroller';\n            var first = scroller.clientWidth;\n            var second = scroller.offsetWidth;\n            this._scrollerWidth = (second - first) || 0;\n        }\n        return this._scrollerWidth;\n    },\n    _finishItemsRendering : function() {\n        var that = this;\n\n        var container = that.getDOMNode();\n        var scrollerWidth = that._getScrollerWidth();\n        var scroller = that.refs.scroller.getDOMNode();\n        scroller.style.height = container.offsetHeight + 'px';\n        scroller.style.marginRight = '-' + scrollerWidth + 'px';\n\n        if (!that._deferredRendering)\n            return;\n\n        var itemsElm = that.refs.items.getDOMNode();\n        var children = itemsElm.childNodes;\n        var block = new ScrollerBlock({\n            getIndex : function() {\n                return that._renderParams.index;\n            },\n            getSize : function() {\n                return children.length;\n            },\n            getItemLength : function(index) {\n                var len = children.length;\n                if (index < 0 || index >= len)\n                    return 0;\n                var elm = children[index];\n                return elm.offsetHeight;\n            }\n        });\n        that._deferredRendering.resolve(block);\n        that._updateScrollbarPosition();\n\n    },\n    _updateScrollbarPosition : function() {\n        var that = this;\n        var itemsNumber = that._scroller.getItemsNumber();\n        var index = that._scroller.getFirstItemIndex();\n        var progress = itemsNumber ? (index / itemsNumber) : 0;\n        var scrollbar = that.refs.scrollbar.getDOMNode();\n        var slider = that.refs.slider.getDOMNode();\n        var sliderHeight = slider.offsetHeight;\n        var scrollbarHeight = scrollbar.offsetHeight;\n        var position = Math.round((scrollbarHeight - sliderHeight) * progress);\n        slider.style.top = position + 'px';\n    },\n    render : function() {\n        var that = this;\n        var items = that._renderParams.items;\n        var style = _.extend({}, that.props.style, {\n            overflow : 'hidden'\n        });\n        var placeholderLen = that._tracker.getLength();\n        return React.DOM.div({\n            id : that.props.id,\n            className : that.props.className,\n            style : style,\n            onScroll : that._onScroll\n        }, React.DOM.div({\n            key : 'wrapper',\n            className : 'wrapper',\n            style : {\n                position : 'absolute',\n                top : 0,\n                bottom : 0,\n                left : 0,\n                right : 0,\n                margin : 0,\n                padding : 0\n            }\n        }, React.DOM.div({\n            key : 'scroller',\n            ref : 'scroller',\n            style : {\n                overflowY : 'scroll',\n                overflowX : 'hidden',\n                position : 'relative',\n                margin : 0,\n                padding : 0\n            }\n        }, React.DOM.div({\n            key : 'placeholder',\n            ref : 'placeholder',\n            style : {\n                position : 'relative',\n                height : placeholderLen + 'px',\n                overflow : 'hidden',\n                paddingRight : '3px',\n                margin : 0,\n                padding : 0\n            }\n        }, React.DOM.div({\n            ref : 'items',\n            style : {\n                position : 'absolute',\n                left : '0px',\n                right : '0px',\n                top : '0px',\n                bottom : 'auto',\n                margin : 0,\n                padding : 0\n            }\n        }, items))), React.DOM.div({\n            key : 'scrollbar',\n            ref : 'scrollbar',\n            className : 'scrollbar',\n            style : {\n                position : 'absolute',\n                top : 0,\n                bottom : 0,\n                right : 0,\n                margin : 0,\n                padding : 0,\n                maxWidth : '10px'\n            }\n        }, React.DOM.div({\n            key : 'slider',\n            ref : 'slider',\n            className : 'slider',\n            style : {\n                position : 'absolute',\n                top : 0,\n                bottom : 0,\n                right : 0,\n                margin : '3px',\n                padding : 0,\n                minHeight : '10px',\n                minWidth : '3px'\n            }\n        }))));\n    },\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ScrollerView.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mosaic-commons\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 6\n ** module chunks = 0\n **/","var _ = require('underscore');\nvar Mosaic = require('mosaic-commons');\n\nmodule.exports = Mosaic.Class.extend(Mosaic.Events.prototype, {\n\n    initialize : function(options) {\n        this.setOptions(options);\n        this._position = -1;\n        this._delta = 0;\n    },\n\n    getLength : function() {\n        return this.options.length || 100000;\n    },\n\n    getPosition : function() {\n        return this._position;\n    },\n\n    getDelta : function() {\n        return this._delta;\n    },\n\n    setPosition : function(position) {\n        var prevPosition = this._position || 0;\n        this._position = position || 0;\n        var length = this.getLength();\n        var threshold = this.getThreshold();\n        var delta = 0;\n        if (this._position < threshold || //\n        this._position > length - threshold) {\n            this._position = length / 2;\n        } else {\n            delta = this._position - prevPosition;\n        }\n        this._delta = delta;\n        this.emit('update', {\n            prevPosition : prevPosition,\n            position : this._position,\n            delta : delta\n        });\n    },\n\n    getThreshold : function() {\n        if (!this.options.threshold) {\n            var length = this.getLength();\n            this.options.threshold = Math.max(length / 4, 50);\n        }\n        return this.options.threshold;\n    },\n\n    addChangeListener : function(listener, context) {\n        this.on('update', listener, context);\n    },\n\n    removeChangeListener : function(listener, context) {\n        this.off('update', listener, context);\n    }\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ScrollBarTracker.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":"","file":"mosaic-scroller.js"}